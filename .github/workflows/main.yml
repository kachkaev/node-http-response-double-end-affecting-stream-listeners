name: Node.js CI

on: [push]

jobs:
  test:
    name: ""
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: false
      matrix:
        os: [macos-11.0, ubuntu-20.04, windows-2019]
        node-version: ["14.15.3", "15.5.0"]
        include:
          - os: ubuntu-latest
            node-version: 10.23.0
          - os: ubuntu-latest
            node-version: 12.20.0
          - os: ubuntu-latest
            node-version: 13.14.0
          - os: ubuntu-latest
            node-version: 14.0.0
          - os: ubuntu-latest
            node-version: 15.0.0
    steps:
      - uses: actions/checkout@v2

      - name: Use Node.js ${{ matrix.node-version }}
        uses: actions/setup-node@v2
        with:
          node-version: ${{ matrix.node-version }}

      - name: start server
        shell: bash
        run: |
          node ./server.js &
          sleep 10 &&
          curl http://localhost:8080

      - name: "content (no drain)"
        if: always()
        shell: bash
        run: |
          curl --dump-header - --max-time 10 --output /dev/null --location 'http://localhost:8080/content'

      - name: "content (with drain)"
        if: always()
        shell: bash
        run: |
          curl --dump-header - --max-time 10 --output /dev/null --location 'http://localhost:8080/content?mode=withDrain'

      - name: "redirect → content (no drain)"
        if: always()
        shell: bash
        run: |
          curl --dump-header - --max-time 10 --output /dev/null --location 'http://localhost:8080/redirect'

      - name: "redirect → content (with drain)"
        if: always()
        shell: bash
        run: |
          curl --dump-header - --max-time 10 --output /dev/null --location 'http://localhost:8080/redirect?contentMode=withDrain'

      - name: "redirect (end twice) → content (no drain)"
        if: always()
        shell: bash
        run: |
          curl --dump-header - --max-time 10 --output /dev/null --location 'http://localhost:8080/redirect?endTwice=true'

      - name: "redirect (end twice) → content (with drain)"
        if: always()
        shell: bash
        run: |
          curl --dump-header - --max-time 10 --output /dev/null --location 'http://localhost:8080/redirect?contentMode=withDrain&endTwice=true'

      - name: "redirect (end twice); new TCP connection: content (with drain)"
        if: always()
        shell: bash
        run: |
          curl --dump-header - --max-time 10 --output /dev/null 'http://localhost:8080/redirect?endTwice=true'
          curl --dump-header - --max-time 10 --output /dev/null 'http://localhost:8080/content?mode=withDrain'

      - name: "redirect (end twice + empty body via end call) → content (with drain)"
        if: always()
        shell: bash
        run: |
          curl --dump-header - --max-time 10 --output /dev/null --location 'http://localhost:8080/redirect?contentMode=withDrain&endTwice=true&addEmptyBody=viaEndCall'

      - name: "redirect (end twice + empty body via second end call) → content (with drain)"
        if: always()
        shell: bash
        run: |
          curl --dump-header - --max-time 10 --output /dev/null --location 'http://localhost:8080/redirect?contentMode=withDrain&endTwice=true&addEmptyBody=viaSecondEndCall'

      - name: "redirect (end twice + empty body via both end calls) → content (with drain)"
        if: always()
        shell: bash
        run: |
          curl --dump-header - --max-time 10 --output /dev/null --location 'http://localhost:8080/redirect?contentMode=withDrain&endTwice=true&addEmptyBody=viaBothEndCalls'

      - name: "redirect (end twice + empty body via write call) → content (with drain)"
        if: always()
        shell: bash
        run: |
          curl --dump-header - --max-time 10 --output /dev/null --location 'http://localhost:8080/redirect?contentMode=withDrain&endTwice=true&addEmptyBody=viaWriteCall'
